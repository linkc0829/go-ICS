kind: pipeline
type: docker
name: icsharing

workspace:
    path: /icsharing

clone:
    git:
        image: plugins/git
        depth: 50
        tags: true

environment:
    #Web config
    GIN_MODE: debug
    DEMO_MODE: off
    ISHEROKU: false
    SERVER_HOST: localhost
    SERVER_PORT: 8080
    SERVER_PATH_VERSION: v1
    SERVER_STATIC_PATH: public/
    COOKIES_DOMAIN: localhost
    #GraphQL Server config 
    GQL_SERVER_GRAPHQL_PATH: /graph
    GQL_SERVER_GRAPHQL_PLAYGROUND_PATH: /playground
    GQL_SERVER_GRAPHQL_PLAYGROUND_ENABLED: true
    #Mongo Config
    MONGO_HOST: mongo:27017    
    MONGO_INITDB_DATABASE: users
    #Redis Config
    REDIS_ENDPOINT: redis-14546.c1.asia-northeast1-1.gce.cloud.redislabs.com:14546
    REDIS_HOST: redis:6379
    # Auth config (Goth, JWT, etc)
    AUTH_API_KEY_HEADER: x-api-key
    AUTH_JWT_SIGNING_ALGORITHM: HS512
    AUTH_JWT_ACCESSTOKEN_EXPIRE: 1h
    AUTH_JWT_REFRESHTOKEN_EXPIRE: 72h
    # Google Config
    PROVIDER_GOOGLE_KEY: yourappkey.apps.googleusercontent.com
    PROVIDER_GOOGLE_SECRET: googlesecret
    PROVIDER_GOOGLE_SCOPES: email,profile,openid
    # Auth0 Confi
    PROVIDER_AUTH0_DOMAIN: dev-3qsby8xq.us.auth0.com
    PROVIDER_AUTH0_SCOPES: email,profile,openid

steps:
- name: http-testing
  image: golang:1.15
  environment:
    SERVER_URI_SCHEMA: http://
    ADMIN_USERID:
        from_secret: ADMIN_USERID
    ADMIN_EMAIL:
        from_secret: ADMIN_EMAIL
    ADMIN_PWD:
        from_secret: ADMIN_PWD
    SESSION_SECRET:
        from_secret: SESSION_SECRET
    AUTH_JWT_SECRET:
        from_secret: AUTH_JWT_SECRET
    MONGO_INITDB_ROOT_USERNAME: 
        from_secret: MONGO_INITDB_ROOT_USERNAME
    MONGO_INITDB_ROOT_PASSWORD: 
        from_secret: MONGO_INITDB_ROOT_PASSWORD
    REDIS_PWD: 
        from_secret: REDIS_PWD
    PROVIDER_AUTH0_KEY:
        from_secret: PROVIDER_AUTH0_KEY
    PROVIDER_AUTH0_SECRET:
        from_secret: PROVIDER_AUTH0_SECRET
  commands: 
  - make test

- name: https-testing
  image: golang:1.15
  environment:
    SERVER_URI_SCHEMA: https://
    ADMIN_USERID:
        from_secret: ADMIN_USERID
    ADMIN_EMAIL:
        from_secret: ADMIN_EMAIL
    ADMIN_PWD:
        from_secret: ADMIN_PWD
    SESSION_SECRET:
        from_secret: SESSION_SECRET
    AUTH_JWT_SECRET:
        from_secret: AUTH_JWT_SECRET
    MONGO_INITDB_ROOT_USERNAME: 
        from_secret: MONGO_INITDB_ROOT_USERNAME
    MONGO_INITDB_ROOT_PASSWORD: 
        from_secret: MONGO_INITDB_ROOT_PASSWORD
    REDIS_PWD: 
        from_secret: REDIS_PWD
    PROVIDER_AUTH0_KEY:
        from_secret: PROVIDER_AUTH0_KEY
    PROVIDER_AUTH0_SECRET:
        from_secret: PROVIDER_AUTH0_SECRET
  commands: 
  - make test


- name: build_alpine
  image: golang:1.15-alpine
  commands:
  - apk update && apk upgrade && apk add --no-cache git
  - apk add gcc g++ make
  - make build_alpine

- name: publish_alpine
  image: plugins/docker
  settings:
    repo: linkc0829/go-icsharing
    username: linkc0829
    password: 
        from_secret: docker_password
    dockerfile: docker/prod.dockerfile
    auto_tag_suffix: alpine

- name: publish_heroku
  image: plugins/docker
  environment:
  settings:
    registry: registry.heroku.com
    dockerfile: docker/prod.dockerfile
    username:
        from_secret: heroku_username
    password:
        from_secret: heroku_password
    repo: registry.heroku.com/icsharing/web 

- name: publish_gcp
  image: plugins/gcr
  settings:
    repo: asia.gcr.io/red-atlas-303101/icsharing
    dockerfile: docker/prod.dockerfile
    json_key:
      from_secret: google_credentials

services:
- name: mongo
  image: mongo:4.4
  environment:
    MONGO_CONNECTION_DSN:
      from_secret: MONGO_CONNECTION_DSN
    MONGO_INITDB_ROOT_USERNAME: 
        from_secret: MONGO_INITDB_ROOT_USERNAME
    MONGO_INITDB_ROOT_PASSWORD: 
        from_secret: MONGO_INITDB_ROOT_PASSWORD

- name: redis
  image: redis:alpine
  environment:
    REDIS_PWD: 
        from_secret: REDIS_PWD
  commands: 
  - redis-server --appendonly yes --requirepass "$REDIS_PWD"
